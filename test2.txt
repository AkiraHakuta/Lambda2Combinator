/* test2.txt (Scott encoding header.h) */  

putStr("//header.h");

NL;putStr("//Booleans");
[tru] |= \x.\y.x;
[fls] |= \x.\y.y;
[and] |= \x.\y.(xy[fls]);
[or]  |= \x.\y.(y[tru]x);
[not] |= \x.(x[fls][tru]);

NL;putStr("//Scott natural numbers");
[0] |= [tru];
[succ] |= \n.\x.\f.(fn);
[1] |=  [succ][0];
[2] |=  [succ][1];
[3] |=  [succ][2];
[4] |=  [succ][3];
[5] |=  [succ][4];
[6] |=  [succ][5];
[7] |=  [succ][6];
[8] |=  [succ][7];
[9] |=  [succ][8];
[10] |=  [succ][9];
[iszero] |= \n.(n[tru](\x.[fls]));
[pred] |= \n.(n[0](\x.x));

NL;putStr("//Arithmetic operations");
[add] |:= \n.\m.(nm(\t.[succ]([add]tm)));
[mult] |:= \n.\m.(n[0](\t.([add]m([mult]tm))));
[sub] |:= \n.\m.(mn(\t.([sub]([pred]n)t)));
[power] |:= \n.\m.(m[1](\t.([mult]n([power]nt))));

NL;putStr("//List");
[cons] |= \x.\s.(\a.\f.(fxs));
[nil] |=  \n.\c.n; //[tru]
[isnil] |= \s.(s[tru](\x.\s.[fls]));
[head] |= \s.(sK(\x.\s.x));       
[tail] |= \s.(s[nil](\x.\s.s));
[pick] |:= \n.\s.(n([head]s)(\t.([pick]t([tail]s))));

NL;putStr("//Pair");
[pair] |= \x.\y.\f.(fxy);
[fst] |= \p.(p(\x.\y.x));
[snd] |= \p.(p(\x.\y.y));

NL;putStr("//etc");
[fact] |:= \n.(n[1](\t.([mult]n([fact]t))));
[fib] |:= \n.(([iszero]([pred]n))[1]([add]([fib]([pred]n))([fib]([pred]([pred]n)))));
[isOdd] |:= \n.(([iszero]n)[fls]([isEven]([pred]n)));
[isEven] |:= \n.(([iszero]n)[tru]([isOdd]([pred]n)));

NL;putStr("//[list2431] := [cons][2]([cons][4]([cons][3]([cons][1][nil])));");
